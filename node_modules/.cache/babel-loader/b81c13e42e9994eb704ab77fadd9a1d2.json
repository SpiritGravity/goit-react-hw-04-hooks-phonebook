{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter'; // import useLocalStorage from './Hooks/useLocalStorage';\n\nimport { Container, Title, Subtitle } from './App.styled';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contactDefault = [{\n  id: 'id-1',\n  name: 'Rosie Simpson',\n  number: '459-12-56'\n}, {\n  id: 'id-2',\n  name: 'Hermione Kline',\n  number: '443-89-12'\n}, {\n  id: 'id-3',\n  name: 'Eden Clements',\n  number: '645-17-79'\n}, {\n  id: 'id-4',\n  name: 'Annie Copeland',\n  number: '227-91-26'\n}];\nexport default function App() {\n  _s();\n\n  const itemsContact = () => {\n    return contactDefault; // JSON.parse(localStorage.getItem('contacts')) || \n  };\n\n  const [contacts, setContacts] = useState(itemsContact());\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContacts = _ref => {\n    let {\n      name,\n      number\n    } = _ref;\n    const contact = {\n      id: nanoid(),\n      name,\n      number\n    };\n\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`${contact.name} is already in contacts`);\n    }\n\n    setContacts([contact, ...contacts]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n    setFilter('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      onChange: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: getVisibleContacts(),\n      onDeleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 2\n  }, this);\n}\n\n_s(App, \"bDuAx+R0Nf0LogbERA3yh8X5nqA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx"],"names":["useState","useEffect","ContactForm","ContactList","Filter","Container","Title","Subtitle","nanoid","contactDefault","id","name","number","App","itemsContact","contacts","setContacts","filter","setFilter","window","localStorage","setItem","JSON","stringify","addContacts","contact","some","alert","changeFilter","e","currentTarget","value","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CACA;;AACA,SAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,QAA1B,QAAyC,cAAzC;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,cAAc,GAAG,CACrB;AAACC,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,eAAnB;AAAoCC,EAAAA,MAAM,EAAE;AAA5C,CADqB,EAErB;AAACF,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,gBAAnB;AAAqCC,EAAAA,MAAM,EAAE;AAA7C,CAFqB,EAGrB;AAACF,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,eAAnB;AAAoCC,EAAAA,MAAM,EAAE;AAA5C,CAHqB,EAIrB;AAACF,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,gBAAnB;AAAqCC,EAAAA,MAAM,EAAE;AAA7C,CAJqB,CAAvB;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAMC,YAAY,GAAG,MAAM;AACzB,WAAWL,cAAX,CADyB,CAGzB;AACD,GAJD;;AAMA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACc,YAAY,EAAb,CAAxC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,QAAMS,WAAW,GAAG,QAAsB;AAAA,QAArB;AAAEb,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAqB;AACxC,UAAMa,OAAO,GAAG;AACdf,MAAAA,EAAE,EAAEF,MAAM,EADI;AAEdG,MAAAA,IAFc;AAGdC,MAAAA;AAHc,KAAhB;;AAKA,QAAIG,QAAQ,CAACW,IAAT,CAAcD,OAAO,IAAIA,OAAO,CAACd,IAAR,KAAiBA,IAA1C,CAAJ,EAAqD;AACnD,aAAOgB,KAAK,CAAE,GAAEF,OAAO,CAACd,IAAK,yBAAjB,CAAZ;AACD;;AACDK,IAAAA,WAAW,CAAC,CAACS,OAAD,EAAU,GAAGV,QAAb,CAAD,CAAX;AACD,GAVD;;AAYA,QAAMa,YAAY,GAAGC,CAAC,IAAI;AACxBX,IAAAA,SAAS,CAACW,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAT;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,UAAMC,gBAAgB,GAAGhB,MAAM,CAACiB,WAAP,EAAzB;AACA,WAAOnB,QAAQ,CAACE,MAAT,CAAgBQ,OAAO,IAC5BA,OAAO,CAACd,IAAR,CAAauB,WAAb,GAA2BC,QAA3B,CAAoCF,gBAApC,CADK,CAAP;AAGD,GALD;;AAOA,QAAMG,aAAa,GAAGC,SAAS,IAAI;AACjCrB,IAAAA,WAAW,CAACD,QAAQ,CAACE,MAAT,CAAgBQ,OAAO,IAAIA,OAAO,CAACf,EAAR,KAAe2B,SAA1C,CAAD,CAAX;AACAnB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAHD;;AAIA,sBACD,QAAC,SAAD;AAAA,4BACA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,WAAD;AACK,MAAA,QAAQ,EAAEM;AADf;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAMA,QAAC,MAAD;AACK,MAAA,KAAK,EAAEP,MADZ;AAEK,MAAA,QAAQ,EAAEW;AAFf;AAAA;AAAA;AAAA;AAAA,YANA,eAUA,QAAC,WAAD;AACK,MAAA,QAAQ,EAAEI,kBAAkB,EADjC;AAEK,MAAA,eAAe,EAAEI;AAFtB;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAkBD;;GA5DuBvB,G;;KAAAA,G","sourcesContent":["import { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\n// import useLocalStorage from './Hooks/useLocalStorage';\nimport {Container, Title, Subtitle} from './App.styled';\nimport { nanoid } from 'nanoid';\n\nconst contactDefault = [\n  {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n  {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n  {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n  {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n];\n\nexport default function App() {\n\n  const itemsContact = () => {\n    return     contactDefault;\n\n    // JSON.parse(localStorage.getItem('contacts')) || \n  };\n\n  const [contacts, setContacts] = useState(itemsContact());\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContacts = ({ name, number }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`${contact.name} is already in contacts`);\n    }\n    setContacts([contact, ...contacts]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n    setFilter('');\n  };\n  return (\n <Container>\n <Title>Phonebook</Title>\n <ContactForm \n      onSubmit={addContacts} \n      />\n <Subtitle>Contacts</Subtitle>\n <Filter\n      value={filter} \n      onChange={changeFilter} \n      />\n <ContactList\n      contacts={getVisibleContacts()}\n      onDeleteContact={deleteContact}\n        />\n</Container>\n  )\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}