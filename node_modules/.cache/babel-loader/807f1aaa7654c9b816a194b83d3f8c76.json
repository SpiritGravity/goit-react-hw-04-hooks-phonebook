{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\nimport { Container, Title, Subtitle } from './App.styled';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const useLocalStorage = (key, defaultValue) => {\n    _s();\n\n    const [state, setState] = useState(() => {\n      var _JSON$parse;\n\n      return (_JSON$parse = JSON.parse(window.localStorage.getItem(key))) !== null && _JSON$parse !== void 0 ? _JSON$parse : defaultValue;\n    });\n    useEffect(() => {\n      window.localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n    return [state, setState];\n  };\n\n  _s(useLocalStorage, \"s9voD/6M5FvzpJKsdM/rKzvx1Xk=\");\n\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContacts = _ref => {\n    let {\n      name,\n      number\n    } = _ref;\n    const normalizedName = name.toLowerCase();\n    const isName = contacts.find(contact => contact.name.toLowerCase() === normalizedName);\n\n    if (isName) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    const contact = {\n      id: nanoid(6),\n      name,\n      number\n    };\n    setContacts([contact, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n    setFilter('');\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getContact = () => {\n    contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLocaleLowerCase()));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      onChange: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: getContact(),\n      onDeleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 2\n  }, this);\n}\n\n_s2(App, \"lN7hX1PdwytBR9n9t5+EXBRV3Qo=\", true);\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx"],"names":["useState","useEffect","ContactForm","ContactList","Filter","Container","Title","Subtitle","nanoid","App","useLocalStorage","key","defaultValue","state","setState","JSON","parse","window","localStorage","getItem","setItem","stringify","contacts","setContacts","filter","setFilter","addContacts","name","number","normalizedName","toLowerCase","isName","find","contact","alert","id","deleteContact","contactId","changeFilter","e","currentTarget","value","getContact","includes","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\nimport {Container, Title, Subtitle} from './App.styled';\nimport { nanoid } from 'nanoid';\n\nexport default function App() {\n\n  const useLocalStorage = (key, defaultValue) => {\n    const [state, setState] = useState(\n      () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\n    );\n  \n    useEffect(() => {\n      window.localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n  \n    return [state, setState];\n  };\n  \n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n\n    const isName = contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (isName) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    const contact = {\n      id: nanoid(6),\n      name,\n      number,\n    };\n\n  setContacts([contact, ...contacts]);\n  };\n  \n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n    setFilter('');\n  };\n\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getContact = () =>  {contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLocaleLowerCase())\n  );\n  }\n\n  return (\n <Container>\n <Title>Phonebook</Title>\n <ContactForm \n      onSubmit={addContacts} \n      />\n <Subtitle>Contacts</Subtitle>\n <Filter\n      value={filter} \n      onChange={changeFilter} \n      />\n <ContactList\n      contacts={getContact()}\n      onDeleteContact={deleteContact}\n        />\n</Container>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}