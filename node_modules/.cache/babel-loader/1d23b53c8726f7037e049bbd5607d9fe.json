{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\nimport { Container, Title, Subtitle } from './App.styled';\nimport useLocalStorage from './Hooks/useLocalStorage';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContacts = _ref => {\n    let {\n      name,\n      number\n    } = _ref;\n    const contact = {\n      id: nanoid(),\n      name,\n      number\n    };\n    const isName = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n\n    if (isName) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    ;\n    setContacts([contact, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n    setFilter('');\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getContact = () => {\n    contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLocaleLowerCase()));\n  };\n\n  const visibleContact = getContact();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      onChange: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: visibleContact,\n      onDeleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 2\n  }, this);\n}\n\n_s(App, \"lN7hX1PdwytBR9n9t5+EXBRV3Qo=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx"],"names":["useState","ContactForm","ContactList","Filter","Container","Title","Subtitle","useLocalStorage","nanoid","App","contacts","setContacts","filter","setFilter","addContacts","name","number","contact","id","isName","find","toLowerCase","alert","deleteContact","contactId","changeFilter","e","currentTarget","value","getContact","includes","toLocaleLowerCase","visibleContact"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,QAA1B,QAAyC,cAAzC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,eAAe,CAAC,UAAD,EAAa,EAAb,CAA/C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMc,WAAW,GAAG,QAAsB;AAAA,QAArB;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAqB;AAExC,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEV,MAAM,EADI;AAEdO,MAAAA,IAFc;AAGdC,MAAAA;AAHc,KAAhB;AAMA,UAAMG,MAAM,GAAGT,QAAQ,CAACU,IAAT,CACbH,OAAO,IAAIA,OAAO,CAACF,IAAR,CAAaM,WAAb,OAA+BN,IAAI,CAACM,WAAL,EAD7B,CAAf;;AAIA,QAAIF,MAAJ,EAAY;AACV,aAAOG,KAAK,CAAE,GAAEP,IAAK,0BAAT,CAAZ;AACD;;AAAA;AAEHJ,IAAAA,WAAW,CAAC,CAACM,OAAD,EAAU,GAAGP,QAAb,CAAD,CAAX;AACC,GAjBD;;AAmBA,QAAMa,aAAa,GAAGC,SAAS,IAAI;AACjCb,IAAAA,WAAW,CAACD,QAAQ,CAACE,MAAT,CAAgBK,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeM,SAA1C,CAAD,CAAX;AACAX,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAHD;;AAMA,QAAMY,YAAY,GAAGC,CAAC,IAAI;AACxBb,IAAAA,SAAS,CAACa,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAT;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAO;AACxBnB,IAAAA,QAAQ,CAACE,MAAT,CAAgBK,OAAO,IACvBA,OAAO,CAACF,IAAR,CAAaM,WAAb,GAA2BS,QAA3B,CAAoClB,MAAM,CAACmB,iBAAP,EAApC,CADA;AAGD,GAJD;;AAKA,QAAMC,cAAc,GAAGH,UAAU,EAAjC;AAEA,sBACD,QAAC,SAAD;AAAA,4BACA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,WAAD;AACK,MAAA,QAAQ,EAAEf;AADf;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAMA,QAAC,MAAD;AACK,MAAA,KAAK,EAAEF,MADZ;AAEK,MAAA,QAAQ,EAAEa;AAFf;AAAA;AAAA;AAAA;AAAA,YANA,eAUA,QAAC,WAAD;AACK,MAAA,QAAQ,EAAEO,cADf;AAEK,MAAA,eAAe,EAAET;AAFtB;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAiBD;;GA1DuBd,G;UAEUF,e;;;KAFVE,G;AA0DvB","sourcesContent":["import { useState } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\nimport {Container, Title, Subtitle} from './App.styled';\nimport useLocalStorage from './Hooks/useLocalStorage';\nimport { nanoid } from 'nanoid';\n\nexport default function App() {\n\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContacts = ({ name, number }) => {\n\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const isName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isName) {\n      return alert(`${name} is already in contacts.`);\n    };\n\n  setContacts([contact, ...contacts]);\n  };\n  \n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n    setFilter('');\n  };\n\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getContact = () =>  {\n    contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLocaleLowerCase())\n  );\n  };\n  const visibleContact = getContact();\n\n  return (\n <Container>\n <Title>Phonebook</Title>\n <ContactForm \n      onSubmit={addContacts} \n      />\n <Subtitle>Contacts</Subtitle>\n <Filter\n      value={filter} \n      onChange={changeFilter} \n      />\n <ContactList\n      contacts={visibleContact}\n      onDeleteContact={deleteContact}\n        />\n</Container>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}