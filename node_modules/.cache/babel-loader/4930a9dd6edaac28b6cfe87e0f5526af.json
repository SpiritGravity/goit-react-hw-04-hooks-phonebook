{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx\";\nimport { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\nimport useLocalStorage from './Hooks/useLocalStorage';\nimport { Container, Title, Subtitle } from './App.styled';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contactDefault = [{\n  id: 'id-1',\n  name: 'Rosie Simpson',\n  number: '459-12-56'\n}, {\n  id: 'id-2',\n  name: 'Hermione Kline',\n  number: '443-89-12'\n}, {\n  id: 'id-3',\n  name: 'Eden Clements',\n  number: '645-17-79'\n}, {\n  id: 'id-4',\n  name: 'Annie Copeland',\n  number: '227-91-26'\n}];\nexport default function App() {\n  state = {\n    contacts: [],\n    filter: ''\n  }; // const componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contacts);\n  //   if (parsedContacts) {\n  //     this.setState({contacts: parsedContacts});\n  //   }\n  // }\n  // const componentDidUpdate(_, prevState) {\n  //   if (this.state.contacts.length !== prevState.contacts.length) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  const addContacts = _ref => {\n    let {\n      name,\n      number\n    } = _ref;\n    const normalizedName = name.toLowerCase();\n    const isName = this.state.contacts.find(contact => contact.name.toLowerCase() === normalizedName);\n\n    if (isName) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    const contact = {\n      id: nanoid(6),\n      name,\n      number\n    };\n    this.setState(_ref2 => {\n      let {\n        contacts\n      } = _ref2;\n      return {\n        contacts: [...contacts, contact]\n      };\n    });\n  };\n\n  const deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }));\n  };\n\n  const changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value\n    });\n  };\n\n  const getContact = () => {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  const {\n    filter\n  } = this.state;\n  const visibleContact = this.getContact();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: this.addContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      onChange: this.changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: visibleContact,\n      onDeleteContact: this.deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 2\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx"],"names":["useState","useEffect","ContactForm","ContactList","Filter","useLocalStorage","Container","Title","Subtitle","nanoid","contactDefault","id","name","number","App","state","contacts","filter","addContacts","normalizedName","toLowerCase","isName","find","contact","alert","setState","deleteContact","contactId","prevState","changeFilter","e","currentTarget","value","getContact","normalizedFilter","includes","visibleContact"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,QAA1B,QAAyC,cAAzC;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,cAAc,GAAG,CACrB;AAACC,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,eAAnB;AAAoCC,EAAAA,MAAM,EAAE;AAA5C,CADqB,EAErB;AAACF,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,gBAAnB;AAAqCC,EAAAA,MAAM,EAAE;AAA7C,CAFqB,EAGrB;AAACF,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,eAAnB;AAAoCC,EAAAA,MAAM,EAAE;AAA5C,CAHqB,EAIrB;AAACF,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,gBAAnB;AAAqCC,EAAAA,MAAM,EAAE;AAA7C,CAJqB,CAAvB;AAMA,eAAe,SAASC,GAAT,GAAe;AAE5BC,EAAAA,KAAK,GAAG;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAINC,IAAAA,MAAM,EAAE;AAJF,GAAR,CAF4B,CAS5B;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,WAAW,GAAG,QAAsB;AAAA,QAArB;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAqB;AACxC,UAAMM,cAAc,GAAGP,IAAI,CAACQ,WAAL,EAAvB;AAEA,UAAMC,MAAM,GAAG,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,IAApB,CACbC,OAAO,IAAIA,OAAO,CAACX,IAAR,CAAaQ,WAAb,OAA+BD,cAD7B,CAAf;;AAIA,QAAIE,MAAJ,EAAY;AACV,aAAOG,KAAK,CAAE,GAAEZ,IAAK,0BAAT,CAAZ;AACD;;AAED,UAAMW,OAAO,GAAG;AACdZ,MAAAA,EAAE,EAAEF,MAAM,CAAC,CAAD,CADI;AAEdG,MAAAA,IAFc;AAGdC,MAAAA;AAHc,KAAhB;AAMA,SAAKY,QAAL,CAAc;AAAA,UAAC;AAAET,QAAAA;AAAF,OAAD;AAAA,aAAmB;AAC/BA,QAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAcO,OAAd;AADqB,OAAnB;AAAA,KAAd;AAGD,GApBD;;AAsBA,QAAMG,aAAa,GAAGC,SAAS,IAAI;AACjC,SAAKF,QAAL,CAAcG,SAAS,KAAK;AAC1BZ,MAAAA,QAAQ,EAAEY,SAAS,CAACZ,QAAV,CAAmBC,MAAnB,CAA0BM,OAAO,IAAIA,OAAO,CAACZ,EAAR,KAAegB,SAApD;AADgB,KAAL,CAAvB;AAGD,GAJD;;AAMA,QAAME,YAAY,GAAGC,CAAC,IAAI;AACxB,SAAKL,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAEa,CAAC,CAACC,aAAF,CAAgBC;AAA1B,KAAd;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAM;AAAEjB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuB,KAAKF,KAAlC;AACA,UAAMmB,gBAAgB,GAAGjB,MAAM,CAACG,WAAP,EAAzB;AAEA,WAAOJ,QAAQ,CAACC,MAAT,CAAgBM,OAAO,IAC5BA,OAAO,CAACX,IAAR,CAAaQ,WAAb,GAA2Be,QAA3B,CAAoCD,gBAApC,CADK,CAAP;AAGD,GAPD;;AAUA,QAAM;AAAEjB,IAAAA;AAAF,MAAa,KAAKF,KAAxB;AACA,QAAMqB,cAAc,GAAG,KAAKH,UAAL,EAAvB;AAEA,sBACD,QAAC,SAAD;AAAA,4BACA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,WAAD;AACK,MAAA,QAAQ,EAAE,KAAKf;AADpB;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAMA,QAAC,MAAD;AACK,MAAA,KAAK,EAAED,MADZ;AAEK,MAAA,QAAQ,EAAE,KAAKY;AAFpB;AAAA;AAAA;AAAA;AAAA,YANA,eAUA,QAAC,WAAD;AACK,MAAA,QAAQ,EAAEO,cADf;AAEK,MAAA,eAAe,EAAE,KAAKV;AAF3B;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAkBD;KAvFuBZ,G","sourcesContent":["import { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\nimport useLocalStorage from './Hooks/useLocalStorage';\nimport {Container, Title, Subtitle} from './App.styled';\nimport { nanoid } from 'nanoid';\n\nconst contactDefault = [\n  {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n  {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n  {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n  {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n]\nexport default function App() {\n\n  state = {\n    contacts: [\n    \n    ],\n    filter: '',\n  }  \n\n  // const componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contacts);\n\n  //   if (parsedContacts) {\n  //     this.setState({contacts: parsedContacts});\n  //   }\n  // }\n\n  // const componentDidUpdate(_, prevState) {\n  //   if (this.state.contacts.length !== prevState.contacts.length) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  const addContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n\n    const isName = this.state.contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (isName) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    const contact = {\n      id: nanoid(6),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n  \n  const deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  const changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  const getContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  \n  const { filter } = this.state;\n  const visibleContact = this.getContact();\n\n  return (\n <Container>\n <Title>Phonebook</Title>\n <ContactForm \n      onSubmit={this.addContacts} \n      />\n <Subtitle>Contacts</Subtitle>\n <Filter\n      value={filter} \n      onChange={this.changeFilter} \n      />\n <ContactList\n      contacts={visibleContact}\n      onDeleteContact={this.deleteContact}\n        />\n</Container>\n  )\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}