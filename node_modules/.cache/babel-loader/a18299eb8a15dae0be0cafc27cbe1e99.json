{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/ContactList/contactList.jsx\";\nimport PropTypes from 'prop-types';\nimport { Container, Item } from './contactList.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactList = _ref => {\n  let {\n    contacts,\n    onDeleteContact\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(_ref2 => {\n        let {\n          id,\n          name,\n          number\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Item, {\n          id: id,\n          name: name,\n          number: number,\n          children: [name, \": \", number, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => onDeleteContact(id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}; // ContactList.propTypes = {\n//     contacts: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//       }).isRequired\n//     ).isRequired,\n//     onDeleteContact: PropTypes.func.isRequired,\n//   };\n\n\n_c = ContactList;\nexport default ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/ContactList/contactList.jsx"],"names":["PropTypes","Container","Item","ContactList","contacts","onDeleteContact","map","id","name","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,sBAAhC;;;AAEA,MAAMC,WAAW,GAAG,QAAiC;AAAA,MAAhC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAgC;AACrD,sBACI,QAAC,SAAD;AAAA,2BACI;AAAA,gBACCD,QAAQ,CAACE,GAAT,CAAa;AAAA,YAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA;AAAZ,SAAD;AAAA,4BACZ,QAAC,IAAD;AAEA,UAAA,EAAE,EAAEF,EAFJ;AAGA,UAAA,IAAI,EAAEC,IAHN;AAIA,UAAA,MAAM,EAAEC,MAJR;AAAA,qBAKCD,IALD,QAKSC,MALT,eAME;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,MAAMJ,eAAe,CAACE,EAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WACKA,EADL;AAAA;AAAA;AAAA;AAAA,gBADY;AAAA,OAAb;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBC,CAnBD,C,CAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA9BMJ,W;AAgCN,eAAeA,WAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { Container, Item } from './contactList.styled';\n\nconst ContactList = ({contacts, onDeleteContact}) => {\nreturn (\n    <Container>\n        <ul>\n        {contacts.map(({ id, name, number }) => (\n          <Item \n          key={id}\n          id={id}\n          name={name}\n          number={number} >\n          {name}: {number}\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </Item>\n        ))}\n        </ul>\n    </Container>\n);\n};\n\n// ContactList.propTypes = {\n//     contacts: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//       }).isRequired\n//     ).isRequired,\n//     onDeleteContact: PropTypes.func.isRequired,\n//   };\n  \nexport default ContactList;"]},"metadata":{},"sourceType":"module"}