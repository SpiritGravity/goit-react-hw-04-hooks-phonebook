{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/ContactForm/contactForm.jsx\";\n// import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import {Form, Input, Button} from './contactForm.styled';\n// export default function ContactForm(props)  {\n//     const [name, setName] = useState(0);\n//     const [number, setNumber] = useState(0);      \n// const handleInputChange = e => {\n//     const { name, value } = e.currentTarget;\n// switch(name) {\n//   case 'name':\n//     setName(value);\n//     break;\n//   case 'number':\n//     setNumber(value);\n//     break;\n// default:\n//   return;\n// }\n// };\n// const handleSubmit = e => {\n//     e.preventDefault();\n//     props.onSubmit({name, number});\n//     reset();\n// };\n// const reset = () => {\n//     setName('');\n//     setNumber('');\n// };\n// return (\n// <Form onSubmit = {handleSubmit}>\n// <label>\n//     Name\n// <Input\n//   type=\"text\"\n//   name=\"name\"\n//   value={name}\n//   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//   title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//   required\n//   onChange={handleInputChange(name)}\n// />\n// </label>\n// <label>\n//     Number\n// <Input\n//   type=\"tel\"\n//   name=\"number\"\n//   value={number}\n//   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//   title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//   required\n//   onChange={handleInputChange(number)}\n// />\n// </label>\n// <Button type='submit'>Add contact</Button>\n// </Form>\n// )  \n// };\n// ContactForm.protoType = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { Form, Input, Button } from './contactForm.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleInputChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"name\",\n          value: name,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"tel\",\n          name: \"number\",\n          value: number,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\n;\nexport default ContactForm;\nContactForm.protoType = {\n  onSubmit: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/ContactForm/contactForm.jsx"],"names":["PropTypes","Component","Form","Input","Button","ContactForm","state","name","number","handleInputChange","e","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","render","protoType","func","isRequired"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,sBAAlC;;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCK,KADgC,GACxB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KADwB;;AAAA,SAMpCC,iBANoC,GAMhBC,CAAC,IAAI;AACrB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACN,IAAD,GAAQI;AAAV,OAAd;AACH,KATmC;;AAAA,SAWpCG,YAXoC,GAWrBJ,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACK,cAAF;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKX,KAAzB;AACA,WAAKY,KAAL;AACH,KAfmC;;AAAA,SAiBpCA,KAjBoC,GAiB5B,MAAM;AACV,WAAKL,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAd;AACH,KAnBmC;AAAA;;AAqBpCW,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AAEF,wBACA,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAI,KAAKQ,YAAvB;AAAA,8BACA;AAAA,wCAEA,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEP,IAHT;AAIE,UAAA,OAAO,EAAC,wHAJV;AAKE,UAAA,KAAK,EAAC,wIALR;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,QAAQ,EAAE,KAAKE;AAPjB;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAaA;AAAA,0CAEA,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAED,MAHT;AAIE,UAAA,OAAO,EAAC,wFAJV;AAKE,UAAA,KAAK,EAAC,8FALR;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,QAAQ,EAAE,KAAKC;AAPjB;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA,eAyBA,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AA6BC;;AAtDmC;;AAuDnC;AAED,eAAeJ,WAAf;AAEAA,WAAW,CAACe,SAAZ,GAAwB;AACtBH,EAAAA,QAAQ,EAAEjB,SAAS,CAACqB,IAAV,CAAeC;AADH,CAAxB","sourcesContent":["// import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import {Form, Input, Button} from './contactForm.styled';\n\n// export default function ContactForm(props)  {\n//     const [name, setName] = useState(0);\n//     const [number, setNumber] = useState(0);      \n\n// const handleInputChange = e => {\n//     const { name, value } = e.currentTarget;\n// switch(name) {\n//   case 'name':\n//     setName(value);\n//     break;\n//   case 'number':\n//     setNumber(value);\n//     break;\n// default:\n//   return;\n// }\n// };\n    \n// const handleSubmit = e => {\n//     e.preventDefault();\n//     props.onSubmit({name, number});\n//     reset();\n// };\n    \n// const reset = () => {\n//     setName('');\n//     setNumber('');\n// };\n\n// return (\n// <Form onSubmit = {handleSubmit}>\n// <label>\n//     Name\n// <Input\n//   type=\"text\"\n//   name=\"name\"\n//   value={name}\n//   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//   title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//   required\n//   onChange={handleInputChange(name)}\n// />\n// </label>\n// <label>\n//     Number\n// <Input\n//   type=\"tel\"\n//   name=\"number\"\n//   value={number}\n//   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//   title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//   required\n//   onChange={handleInputChange(number)}\n// />\n// </label>\n// <Button type='submit'>Add contact</Button>\n// </Form>\n// )  \n// };\n    \n\n// ContactForm.protoType = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport {Form, Input, Button} from './contactForm.styled';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n      };\n\nhandleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n};\n    \nhandleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n};\n    \nreset = () => {\n    this.setState({ name: '', number: '' });\n};\n\nrender() {\n\n  const { name, number } = this.state;\n\nreturn (\n<Form onSubmit = {this.handleSubmit}>\n<label>\n    Name\n<Input\n  type=\"text\"\n  name=\"name\"\n  value={name}\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  required\n  onChange={this.handleInputChange}\n/>\n</label>\n<label>\n    Number\n<Input\n  type=\"tel\"\n  name=\"number\"\n  value={number}\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  required\n  onChange={this.handleInputChange}\n/>\n</label>\n<Button type='submit'>Add contact</Button>\n</Form>\n)  \n}\n};\n    \nexport default ContactForm;\n\nContactForm.protoType = {\n  onSubmit: PropTypes.func.isRequired,\n};"]},"metadata":{},"sourceType":"module"}