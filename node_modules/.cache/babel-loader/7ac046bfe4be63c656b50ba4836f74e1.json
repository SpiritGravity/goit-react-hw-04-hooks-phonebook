{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\nimport { Container, Title, Subtitle } from './App.styled';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initContacts = [{\n  id: 'id-1',\n  name: 'Rosie Simpson',\n  number: '459-12-56'\n}, {\n  id: 'id-2',\n  name: 'Hermione Kline',\n  number: '443-89-12'\n}, {\n  id: 'id-3',\n  name: 'Eden Clements',\n  number: '645-17-79'\n}, {\n  id: 'id-4',\n  name: 'Annie Copeland',\n  number: '227-91-26'\n}];\n\nconst useLocalStorage = (key, defaultValue) => {\n  _s();\n\n  const [state, setState] = useState(() => {\n    var _JSON$parse;\n\n    return (_JSON$parse = JSON.parse(window.localStorage.getItem(key))) !== null && _JSON$parse !== void 0 ? _JSON$parse : defaultValue;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n};\n\n_s(useLocalStorage, \"s9voD/6M5FvzpJKsdM/rKzvx1Xk=\");\n\nexport default function App() {\n  _s2();\n\n  const [contacts, setContacts] = useLocalStorage(contactsItems());\n  const [filter, setFilter] = useState('');\n\n  const addContacts = _ref => {\n    let {\n      name,\n      number\n    } = _ref;\n    const normalizedName = name.toLowerCase();\n    const isName = contacts.find(contact => contact.name.toLowerCase() === normalizedName);\n\n    if (isName) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    const contact = {\n      id: nanoid(6),\n      name,\n      number\n    };\n    setContacts([contact, ...contacts]);\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n    setFilter('');\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getContact = () => {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      onChange: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: getContact,\n      onDeleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 2\n  }, this);\n}\n\n_s2(App, \"XeTQDJZgpPh8x38N0YZNsCqV31Q=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx"],"names":["useState","useEffect","ContactForm","ContactList","Filter","Container","Title","Subtitle","nanoid","initContacts","id","name","number","useLocalStorage","key","defaultValue","state","setState","JSON","parse","window","localStorage","getItem","setItem","stringify","App","contacts","setContacts","contactsItems","filter","setFilter","addContacts","normalizedName","toLowerCase","isName","find","contact","alert","deleteContact","contactId","changeFilter","e","currentTarget","value","getContact","normalizedFilter","includes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\nimport {Container, Title, Subtitle} from './App.styled';\nimport { nanoid } from 'nanoid';\n\nconst initContacts = [\n  {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ];\n\n\n    const useLocalStorage = (key, defaultValue) => {\n      const [state, setState] = useState(\n        () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\n      );\n    \n      useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n      }, [key, state]);\n    \n      return [state, setState];\n    };\n\n    \n\n\n\nexport default function App() {\n\n  const [contacts, setContacts] = useLocalStorage(contactsItems());\n  const [filter, setFilter] = useState('');\n\n  const addContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n\n    const isName = contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (isName) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    const contact = {\n      id: nanoid(6),\n      name,\n      number,\n    };\n\n  setContacts([contact, ...contacts]);\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n  \n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n    setFilter('');\n  };\n\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n <Container>\n <Title>Phonebook</Title>\n <ContactForm \n      onSubmit={addContacts} \n      />\n <Subtitle>Contacts</Subtitle>\n <Filter\n      value={filter} \n      onChange={changeFilter} \n      />\n <ContactList\n      contacts={getContact}\n      onDeleteContact={deleteContact}\n        />\n</Container>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}