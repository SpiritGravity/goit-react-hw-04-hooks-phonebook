{"ast":null,"code":"import _toConsumableArray from\"/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import ContactForm from'./ContactForm/contactForm';import ContactList from'./ContactList/contactList';import Filter from'./Filter/filter';import useLocalStorage from'./Hooks/useLocalStorage';import{Container,Title,Subtitle}from'./App.styled';import{nanoid}from'nanoid';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var _useLocalStorage=useLocalStorage('contacts',[]),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),contacts=_useLocalStorage2[0],setContacts=_useLocalStorage2[1];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),filter=_useState2[0],setFilter=_useState2[1];var addContacts=function addContacts(_ref){var name=_ref.name,number=_ref.number;var contact={id:nanoid(),name:name,number:number};if(contacts.some(function(contact){return contact.name===name;})){return alert(\"\".concat(contact.name,\" is already in contacts\"));}setContacts([contact].concat(_toConsumableArray(contacts)));};var changeFilter=function changeFilter(e){setFilter(e.currentTarget.value);};var getContacts=function getContacts(){return contacts.filter(function(contact){return contact.name.toLowerCase().includes(filter.toLowerCase());});};var deleteContact=function deleteContact(contactId){setContacts(contacts.filter(function(contact){return contact.id!==contactId;}));setFilter('');};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"Phonebook\"}),/*#__PURE__*/_jsx(ContactForm,{onSubmit:addContacts}),/*#__PURE__*/_jsx(Subtitle,{children:\"Contacts\"}),/*#__PURE__*/_jsx(Filter,{value:filter,onChange:changeFilter}),/*#__PURE__*/_jsx(ContactList,{contacts:getContacts(),onDeleteContact:deleteContact})]});}","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/App.jsx"],"names":["useState","ContactForm","ContactList","Filter","useLocalStorage","Container","Title","Subtitle","nanoid","App","contacts","setContacts","filter","setFilter","addContacts","name","number","contact","id","some","alert","changeFilter","e","currentTarget","value","getContacts","toLowerCase","includes","deleteContact","contactId"],"mappings":"0SAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,eAAP,KAA4B,yBAA5B,CACA,OAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,QAA1B,KAAyC,cAAzC,CACA,OAASC,MAAT,KAAuB,QAAvB,C,wFAIA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAE5B,qBAAgCL,eAAe,CAAC,UAAD,CAAa,EAAb,CAA/C,sDAAOM,QAAP,sBAAiBC,WAAjB,sBACA,cAA4BX,QAAQ,CAAC,EAAD,CAApC,wCAAOY,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAsB,IAAnBC,CAAAA,IAAmB,MAAnBA,IAAmB,CAAbC,MAAa,MAAbA,MAAa,CACxC,GAAMC,CAAAA,OAAO,CAAG,CACdC,EAAE,CAAEV,MAAM,EADI,CAEdO,IAAI,CAAJA,IAFc,CAGdC,MAAM,CAANA,MAHc,CAAhB,CAKA,GAAIN,QAAQ,CAACS,IAAT,CAAc,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACF,IAAR,GAAiBA,IAArB,EAArB,CAAJ,CAAqD,CACnD,MAAOK,CAAAA,KAAK,WAAIH,OAAO,CAACF,IAAZ,4BAAZ,CACD,CACDJ,WAAW,EAAEM,OAAF,4BAAcP,QAAd,GAAX,CACD,CAVD,CAYA,GAAMW,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxBT,SAAS,CAACS,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAT,CACD,CAFD,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,MAAOf,CAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAAK,OAAO,QAC5BA,CAAAA,OAAO,CAACF,IAAR,CAAaW,WAAb,GAA2BC,QAA3B,CAAoCf,MAAM,CAACc,WAAP,EAApC,CAD4B,EAAvB,CAAP,CAGD,CAJD,CAMA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,SAAS,CAAI,CACjClB,WAAW,CAACD,QAAQ,CAACE,MAAT,CAAgB,SAAAK,OAAO,QAAIA,CAAAA,OAAO,CAACC,EAAR,GAAeW,SAAnB,EAAvB,CAAD,CAAX,CACAhB,SAAS,CAAC,EAAD,CAAT,CACD,CAHD,CAKA,mBACD,MAAC,SAAD,yBACA,KAAC,KAAD,wBADA,cAEA,KAAC,WAAD,EACK,QAAQ,CAAEC,WADf,EAFA,cAKA,KAAC,QAAD,uBALA,cAMA,KAAC,MAAD,EACK,KAAK,CAAEF,MADZ,CAEK,QAAQ,CAAES,YAFf,EANA,cAUA,KAAC,WAAD,EACK,QAAQ,CAAEI,WAAW,EAD1B,CAEK,eAAe,CAAEG,aAFtB,EAVA,GADC,CAkBD","sourcesContent":["import { useState } from 'react';\nimport ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\nimport useLocalStorage from './Hooks/useLocalStorage';\nimport {Container, Title, Subtitle} from './App.styled';\nimport { nanoid } from 'nanoid';\n\n\n\nexport default function App() {\n\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContacts = ({ name, number }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`${contact.name} is already in contacts`);\n    }\n    setContacts([contact, ...contacts]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n    setFilter('');\n  };\n  \n  return (\n <Container>\n <Title>Phonebook</Title>\n <ContactForm \n      onSubmit={addContacts} \n      />\n <Subtitle>Contacts</Subtitle>\n <Filter\n      value={filter} \n      onChange={changeFilter} \n      />\n <ContactList\n      contacts={getContacts()}\n      onDeleteContact={deleteContact}\n        />\n</Container>\n  )\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}