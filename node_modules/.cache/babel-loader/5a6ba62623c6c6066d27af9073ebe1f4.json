{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/ContactList/contactList.jsx\";\n// import PropTypes from 'prop-types';\n// import { Container, Item } from './contactList.styled';\n// const ContactList = ({contacts, onDeleteContact}) => {\n// return (\n//     <Container>\n//         <ul>\n//         {contacts.map(({ id, name, number }) => (\n//           <Item \n//           key={id}\n//           id={id}\n//           name={name}\n//           number={number} >\n//           {name}: {number}\n//             <button type=\"button\" onClick={() => onDeleteContact(id)}>\n//               Delete\n//             </button>\n//           </Item>\n//         ))}\n//         </ul>\n//     </Container>\n// );\n// };\n// ContactList.propTypes = {\n//     contacts: PropTypes.arrayOf(\n//       PropTypes.exact({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//       }).isRequired\n//     ).isRequired,\n//     onDeleteContact: PropTypes.func.isRequired,\n//   };\n// export default ContactList;\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactList(_ref) {\n  let {\n    formData,\n    onDeleteBtn\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: s.list,\n    children: formData.map(_ref2 => {\n      let {\n        id,\n        name,\n        number\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: id,\n        name: name,\n        number: number,\n        className: s.item,\n        children: [name, \": \", number, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => onDeleteBtn(id),\n          className: s.button,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n}\n_c = ContactList;\nContactList.protoTypes = {\n  FormData: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  })).isRequired,\n  onDeleteBtn: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-phonebook/src/components/ContactList/contactList.jsx"],"names":["PropTypes","s","ContactList","formData","onDeleteBtn","list","map","id","name","number","item","button","protoTypes","FormData","arrayOf","shape","string","isRequired","func"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,0BAAd;;AAGA,eAAe,SAASC,WAAT,OAAgD;AAAA,MAA3B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA2B;AAE3D,sBAEQ;AAAI,IAAA,SAAS,EAAEH,CAAC,CAACI,IAAjB;AAAA,cACKF,QAAQ,CAACG,GAAT,CAAa;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAD;AAAA,0BACV;AACI,QAAA,EAAE,EAAEF,EADR;AAEI,QAAA,IAAI,EAAEC,IAFV;AAGI,QAAA,MAAM,EAAEC,MAHZ;AAII,QAAA,SAAS,EAAER,CAAC,CAACS,IAJjB;AAAA,mBAMKF,IANL,QAMaC,MANb,eAOI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,MAAML,WAAW,CAACG,EAAD,CAAhD;AAAsD,UAAA,SAAS,EAAEN,CAAC,CAACU,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,SAASJ,EAAT;AAAA;AAAA;AAAA;AAAA,cADU;AAAA,KAAb;AADL;AAAA;AAAA;AAAA;AAAA,UAFR;AAkBH;KApBuBL,W;AAsBxBA,WAAW,CAACU,UAAZ,GAAyB;AACrBC,EAAAA,QAAQ,EAAEb,SAAS,CAACc,OAAV,CACNd,SAAS,CAACe,KAAV,CAAgB;AAClBR,IAAAA,EAAE,EAAEP,SAAS,CAACgB,MAAV,CAAiBC,UADH;AAElBT,IAAAA,IAAI,EAAER,SAAS,CAACgB,MAAV,CAAiBC,UAFL;AAGlBR,IAAAA,MAAM,EAAET,SAAS,CAACgB,MAAV,CAAiBC;AAHP,GAAhB,CADM,EAKNA,UANiB;AAOnBb,EAAAA,WAAW,EAAEJ,SAAS,CAACkB,IAAV,CAAeD;AAPT,CAAzB","sourcesContent":["// import PropTypes from 'prop-types';\n// import { Container, Item } from './contactList.styled';\n\n// const ContactList = ({contacts, onDeleteContact}) => {\n// return (\n//     <Container>\n//         <ul>\n//         {contacts.map(({ id, name, number }) => (\n//           <Item \n//           key={id}\n//           id={id}\n//           name={name}\n//           number={number} >\n//           {name}: {number}\n//             <button type=\"button\" onClick={() => onDeleteContact(id)}>\n//               Delete\n//             </button>\n//           </Item>\n//         ))}\n//         </ul>\n//     </Container>\n// );\n// };\n\n// ContactList.propTypes = {\n//     contacts: PropTypes.arrayOf(\n//       PropTypes.exact({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//       }).isRequired\n//     ).isRequired,\n//     onDeleteContact: PropTypes.func.isRequired,\n//   };\n  \n  \n// export default ContactList;\n\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n \n\nexport default function ContactList({ formData, onDeleteBtn }) {\n\n    return (\n       \n            <ul className={s.list}>\n                {formData.map(({ id, name, number }) => (\n                    <li key={id}\n                        id={id}\n                        name={name}\n                        number={number} \n                        className={s.item}\n                    >\n                        {name}: {number}\n                        <button type='button' onClick={() => onDeleteBtn(id)} className={s.button}>\n                            Delete\n                        </button>\n                    </li>))}\n            </ul>\n       \n    )             \n}\n\nContactList.protoTypes = {\n    FormData: PropTypes.arrayOf(\n        PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })).isRequired,\n      onDeleteBtn: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}